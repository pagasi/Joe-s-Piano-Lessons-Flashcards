//
//  ScaleData.swift
//  Joe's Piano Lessons Flashcards
//
//  Created by Whitney Naquin on 2/15/21.
//

import Foundation
//MARK: ScaleData1: maj 1 oct
class ScaleData {
    let cMajorScale: ScaleModel = ScaleModel(scaleName: "C Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["C","D","E","F","G","A","B","C"])
    
    let gMajorScale: ScaleModel = ScaleModel(scaleName: "G Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["G","A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G"])
    
    let dMajorScale: ScaleModel = ScaleModel(scaleName: "D Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["D","E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D"])
    
    let aMajorScale: ScaleModel = ScaleModel(scaleName: "A Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["A","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A"])
    
    let eMajorScale: ScaleModel = ScaleModel(scaleName: "E Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E"])
    
    let bMajorScale: ScaleModel = ScaleModel(scaleName: "B Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B"])
    
    let cbMajorScale: ScaleModel = ScaleModel(scaleName: "C\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1], scaleLetters: ["C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)"])
    
    let fSharpMajorScale: ScaleModel = ScaleModel(scaleName: "F\(Constants.SHARP_UNICODE) Major", scaleFingeringRH: [2,3,4,1,2,3,1,2], scaleFingeringLH: [4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let gbMajorScale: ScaleModel = ScaleModel(scaleName: "G\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [2,3,4,1,2,3,1,2], scaleFingeringLH: [4,3,2,1,3,2,1,4], scaleLetters: ["G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)"])
    
    let cSharpMajorScale: ScaleModel = ScaleModel(scaleName: "C\(Constants.SHARP_UNICODE) Major", scaleFingeringRH: [2,3,1,2,3,4,1,2], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let dbMajorScale: ScaleModel = ScaleModel(scaleName: "D\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [2,3,1,2,3,4,1,2], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)"])
    
    let abMajorScale: ScaleModel = ScaleModel(scaleName: "A\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)"])
    
    let ebMajorScale: ScaleModel = ScaleModel(scaleName: "E\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [3,1,2,3,4,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)"])
    
    let bbMajorScale: ScaleModel = ScaleModel(scaleName: "B\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [4,1,2,3,1,2,3,4], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A","B\(Constants.FLAT_UNICODE)"])
    
    let fMajorScale: ScaleModel = ScaleModel(scaleName: "F Major", scaleFingeringRH: [1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["F","G","A","B\(Constants.FLAT_UNICODE)","C","D","E","F"])
    
    func createArray() -> [ScaleModel] {
        
        let theArray: [ScaleModel] = [cMajorScale, gMajorScale, dMajorScale, aMajorScale, eMajorScale, bMajorScale, cbMajorScale, fSharpMajorScale, gbMajorScale, cSharpMajorScale, dbMajorScale, abMajorScale, ebMajorScale, bbMajorScale, fMajorScale]
        
  return theArray
    }
}
//MARK: ScaleData2: maj 2 oct
class ScaleData2 {
    let cMajorScale: ScaleModel = ScaleModel(scaleName: "C Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["C","D","E","F","G","A","B","C","D","E","F","G","A","B","C"])

    let gMajorScale: ScaleModel = ScaleModel(scaleName: "G Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["G","A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G","A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G"])
    
    let dMajorScale: ScaleModel = ScaleModel(scaleName: "D Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["D","E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D"])
    
    let aMajorScale: ScaleModel = ScaleModel(scaleName: "A Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["A","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A"])
    
    let eMajorScale: ScaleModel = ScaleModel(scaleName: "E Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E"])
    
    let bMajorScale: ScaleModel = ScaleModel(scaleName: "B Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B"])
    
    let cbMajorScale: ScaleModel = ScaleModel(scaleName: "C\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1,3,2,1,4,3,2,1], scaleLetters: ["C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)"])
    
    let fSharpMajorScale: ScaleModel = ScaleModel(scaleName: "F\(Constants.SHARP_UNICODE) Major", scaleFingeringRH: [2,3,4,1,2,3,1,2,3,4,1,2,3,1,2], scaleFingeringLH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let gbMajorScale: ScaleModel = ScaleModel(scaleName: "G\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [2,3,4,1,2,3,1,2,3,4,1,2,3,1,2], scaleFingeringLH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleLetters: ["G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)"])
    
    let cSharpMajorScale: ScaleModel = ScaleModel(scaleName: "C\(Constants.SHARP_UNICODE) Major", scaleFingeringRH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,2], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let dbMajorScale: ScaleModel = ScaleModel(scaleName: "D\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,2], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)"])
    
    let abMajorScale: ScaleModel = ScaleModel(scaleName: "A\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)"])
    
    let ebMajorScale: ScaleModel = ScaleModel(scaleName: "E\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)"])
    
    let bbMajorScale: ScaleModel = ScaleModel(scaleName: "B\(Constants.FLAT_UNICODE) Major", scaleFingeringRH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A","B\(Constants.FLAT_UNICODE)"])
    
    let fMajorScale: ScaleModel = ScaleModel(scaleName: "F Major", scaleFingeringRH: [1,2,3,4,1,2,3,1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["F","G","A","B\(Constants.FLAT_UNICODE)","C","D","E","F","G","A","B\(Constants.FLAT_UNICODE)","C","D","E","F"])
    
    func createArray() -> [ScaleModel] {
        
        let theArray: [ScaleModel] = [cMajorScale, gMajorScale, dMajorScale, aMajorScale, eMajorScale, bMajorScale, cbMajorScale, fSharpMajorScale, gbMajorScale, cSharpMajorScale, dbMajorScale, abMajorScale, ebMajorScale, bbMajorScale, fMajorScale]
        
  return theArray
    }
}
//MARK: ScaleData3: min 1 oct
class ScaleData3 {
    let cMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "c Minor Harmonic (related to E\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.NATURAL_UNICODE)","C"])
    
    let cMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "c Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.NATURAL_UNICODE)","B\(Constants.NATURAL_UNICODE)","C"])
    
    let cMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "c Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F","E\(Constants.FLAT_UNICODE)","D","C"])
    
    let gMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "g Minor Harmonic (related to B\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F\(Constants.SHARP_UNICODE)","G"])
    
    let gMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "g Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","G"])
    
    let gMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "g Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["G","F\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)","D","C","B\(Constants.FLAT_UNICODE)","A","G"])
    
    let dMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "d Minor Harmonic (related to F Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["D","E","F","G","A","B\(Constants.FLAT_UNICODE)","C\(Constants.SHARP_UNICODE)","D"])
    
    let dMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "d Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["D","E","F","G","A","B\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","D"])
    
    let dMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "d Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["D","C\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)","A","G","F","E","D"])
    
    let aMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a Minor Harmonic (related to C Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["A","B","C","D","E","F","G\(Constants.SHARP_UNICODE)","A"])
    
    let aMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A"])
    
    let aMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["A","G\(Constants.NATURAL_UNICODE)","F\(Constants.NATURAL_UNICODE)","E","D","C","B","A"])
    
    let eMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "e Minor Harmonic (related to G Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G","A","B","C","D\(Constants.SHARP_UNICODE)","E"])
    
    let eMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "e Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E"])
    
    let eMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "e Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["E","D\(Constants.NATURAL_UNICODE)","C\(Constants.NATURAL_UNICODE)","B","A","G","F\(Constants.SHARP_UNICODE)","E"])
    
    let bMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "b Minor Harmonic (related to D Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G","A\(Constants.SHARP_UNICODE)","B"])
    
    let bMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "b Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B"])
    
    let bMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "b Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,4,1,2,3,4], scaleLetters: ["B","A\(Constants.NATURAL_UNICODE)","G\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D","C\(Constants.SHARP_UNICODE)","B"])
    
    let fSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Harmonic (related to A Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let fSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [2,3,1,2,3,4,1,3], scaleFingeringLH: [4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let fSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3], scaleFingeringLH: [4,1,2,3,1,2,3,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Harmonic (related to E Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [2,3,1,2,3,4,1,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3], scaleFingeringLH: [3,1,2,3,4,1,2,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Harmonic (related to B Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3], scaleFingeringLH: [3,4,1,2,3,1,2,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])

    let abMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Harmonic (related to C\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G\(Constants.NATURAL_UNICODE)","A\(Constants.FLAT_UNICODE)"])
    
    let abMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.NATURAL_UNICODE)","G\(Constants.NATURAL_UNICODE)","A\(Constants.FLAT_UNICODE)"])
    
    let abMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3], scaleFingeringLH: [3,4,1,2,3,1,2,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)"])
  
    let dSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Harmonic (related to F\(Constants.SHARP_UNICODE) Maj)", scaleFingeringRH: [3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])
    
    let dSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])
    
    let dSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,4,3,2,1,3], scaleFingeringLH: [2,3,1,2,3,4,1,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])

    let ebMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Harmonic (related to G\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)"])
    
    let ebMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.NATURAL_UNICODE)","D\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)"])
    
    let ebMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,4,3,2,1,3], scaleFingeringLH: [2,3,1,2,3,4,1,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)"])

    let aSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Harmonic (related to C\(Constants.SHARP_UNICODE) Maj)", scaleFingeringRH: [4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])
    
    let aSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])
    
    let aSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,3,2,1,4], scaleFingeringLH: [2,3,4,1,2,3,1,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])

    let bbMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Harmonic (related to D\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)"])
    
    let bbMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)"])
    
    let bbMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,3,2,1,4], scaleFingeringLH: [2,3,4,1,2,3,1,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)"])
  
    let fMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "f Minor Harmonic (related to A\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.NATURAL_UNICODE)","F"])
    
    let fMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "f Minor Melodic Ascending", scaleFingeringRH: [1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1], scaleLetters: ["F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.NATURAL_UNICODE)","E\(Constants.NATURAL_UNICODE)","F"])

    let fMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "f Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,4,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,5], scaleLetters: ["F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F"])
    
    func createArray() -> [ScaleModel] {
        
        let theArray: [ScaleModel] = [cMinorScaleHarmonic, cMinorScaleMelodicAscending, cMinorScaleMelodicDescending, gMinorScaleHarmonic, gMinorScaleMelodicAscending, gMinorScaleMelodicDescending, dMinorScaleHarmonic, dMinorScaleMelodicAscending, dMinorScaleMelodicDescending, aMinorScaleHarmonic, aMinorScaleMelodicAscending, aMinorScaleMelodicDescending, eMinorScaleHarmonic, eMinorScaleMelodicAscending, eMinorScaleMelodicDescending, bMinorScaleHarmonic,bMinorScaleMelodicAscending, bMinorScaleMelodicDescending, fSharpMinorScaleHarmonic, fSharpMinorScaleMelodicAscending, fSharpMinorScaleMelodicDescending, cSharpMinorScaleHarmonic, cSharpMinorScaleMelodicAscending, cSharpMinorScaleMelodicDescending, gSharpMinorScaleHarmonic, gSharpMinorScaleMelodicAscending, gSharpMinorScaleMelodicDescending, abMinorScaleHarmonic, abMinorScaleMelodicAscending, abMinorScaleMelodicDescending, dSharpMinorScaleHarmonic, dSharpMinorScaleMelodicAscending, dSharpMinorScaleMelodicDescending, ebMinorScaleHarmonic, ebMinorScaleMelodicAscending, ebMinorScaleMelodicDescending, aSharpMinorScaleHarmonic, aSharpMinorScaleMelodicAscending, aSharpMinorScaleMelodicDescending, bbMinorScaleHarmonic, bbMinorScaleMelodicAscending, bbMinorScaleMelodicDescending, fMinorScaleHarmonic, fMinorScaleMelodicAscending, fMinorScaleMelodicDescending]
        
  return theArray
    }
}
//MARK: ScaleData4: min 2 oct
class ScaleData4 {
    let cMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "C Minor Harmonic (related to E\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.NATURAL_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.NATURAL_UNICODE)","C"])

    let cMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "c Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.NATURAL_UNICODE)","B\(Constants.NATURAL_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.NATURAL_UNICODE)","B\(Constants.NATURAL_UNICODE)","C"])
    
    let cMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "c Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F","E\(Constants.FLAT_UNICODE)","D","C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F","E\(Constants.FLAT_UNICODE)","D","C"])
    
    let gMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "g Minor Harmonic (related to B\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F\(Constants.SHARP_UNICODE)","G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.FLAT_UNICODE)","F\(Constants.SHARP_UNICODE)","G"])
    
    let gMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "g Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","G","A","B\(Constants.FLAT_UNICODE)","C","D","E\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","G"])
    
    let gMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "g Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["G","F\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)","D","C","B\(Constants.FLAT_UNICODE)","A","G","F\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)","D","C","B\(Constants.FLAT_UNICODE)","A","G"])
    
    let dMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "d Minor Harmonic (related to F Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["D","E","F","G","A","B\(Constants.FLAT_UNICODE)","C\(Constants.SHARP_UNICODE)","D","E","F","G","A","B\(Constants.FLAT_UNICODE)","C\(Constants.SHARP_UNICODE)","D"])
    
    let dMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "d Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["D","E","F","G","A","B\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","D","E","F","G","A","B\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","D"])
    
    let dMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "d Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["D","C\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)","A","G","F","E","D","C\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)","A","G","F","E","D"])
    
    let aMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a Minor Harmonic (related to C Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["A","B","C","D","E","F","G\(Constants.SHARP_UNICODE)","A","B","C","D","E","F","G\(Constants.SHARP_UNICODE)","A"])
    
    let aMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A"])
    
    let aMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["A","G\(Constants.NATURAL_UNICODE)","F\(Constants.NATURAL_UNICODE)","E","D","C","B","A","G\(Constants.NATURAL_UNICODE)","F\(Constants.NATURAL_UNICODE)","E","D","C","B","A"])
    
    let eMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "e Minor Harmonic (related to G Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G","A","B","C","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G","A","B","C","D\(Constants.SHARP_UNICODE)","E"])
    
    let eMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "e Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E"])
    
    let eMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "e Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["E","D\(Constants.NATURAL_UNICODE)","C\(Constants.NATURAL_UNICODE)","B","A","G","F\(Constants.SHARP_UNICODE)","E","D\(Constants.NATURAL_UNICODE)","C\(Constants.NATURAL_UNICODE)","B","A","G","F\(Constants.SHARP_UNICODE)","E"])
    
    let bMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "b Minor Harmonic (related to D Maj)", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G","A\(Constants.SHARP_UNICODE)","B"])
    
    let bMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "b Minor Melodic Ascending", scaleFingeringRH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleFingeringLH: [4,3,2,1,4,3,2,1,3,2,1,4,3,2,1], scaleLetters: ["B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B"])
    
    let bMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "b Minor Melodic Descending", scaleFingeringRH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleFingeringLH: [1,2,3,4,1,2,3,1,2,3,4,1,2,3,4], scaleLetters: ["B","A\(Constants.NATURAL_UNICODE)","G\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D","C\(Constants.SHARP_UNICODE)","B","A\(Constants.NATURAL_UNICODE)","G\(Constants.NATURAL_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D","C\(Constants.SHARP_UNICODE)","B"])
    
    let fSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Harmonic (related to A Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let fSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,3], scaleFingeringLH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let fSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "f\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3,2,1,3,2,1,4,3], scaleFingeringLH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleLetters: ["F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.NATURAL_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Harmonic (related to E Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let cSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "c\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3,2,1,3,2,1,4,3], scaleFingeringLH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleLetters: ["C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Harmonic (related to B Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])
    
    let gSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "g\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3,2,1,3,2,1,4,3], scaleFingeringLH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleLetters: ["G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.NATURAL_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)"])

    let abMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Harmonic (related to C\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","G\(Constants.NATURAL_UNICODE)","A\(Constants.FLAT_UNICODE)"])
    
    let abMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleFingeringLH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F\(Constants.NATURAL_UNICODE)","G\(Constants.NATURAL_UNICODE)","A\(Constants.FLAT_UNICODE)"])
    
    let abMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,3,2,1,4,3,2,1,3,2,1,4,3], scaleFingeringLH: [3,4,1,2,3,1,2,3,4,1,2,3,1,2,3], scaleLetters: ["A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)"])
  
    let dSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Harmonic (related to F\(Constants.SHARP_UNICODE) Maj)", scaleFingeringRH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2,1,4,3,2,1,3,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])
    
    let dSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2,1,4,3,2,1,3,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.DOUBLE_SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])
    
    let dSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "d\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleFingeringLH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,2], scaleLetters: ["D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.NATURAL_UNICODE)","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)"])

    let ebMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Harmonic (related to G\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2,1,4,3,2,1,3,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","D\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)"])
    
    let ebMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [3,1,2,3,4,1,2,3,1,2,3,4,1,2,3], scaleFingeringLH: [2,1,4,3,2,1,3,2,1,4,3,2,1,3,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.NATURAL_UNICODE)","D","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C\(Constants.NATURAL_UNICODE)","D\(Constants.NATURAL_UNICODE)","E\(Constants.FLAT_UNICODE)"])
    
    let ebMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "e\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [3,2,1,4,3,2,1,3,2,1,4,3,2,1,3], scaleFingeringLH: [2,3,1,2,3,4,1,2,3,1,2,3,4,1,2], scaleLetters: ["E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)"])

    let aSharpMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Harmonic (related to C\(Constants.SHARP_UNICODE) Maj)", scaleFingeringRH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2,1,3,2,1,4,3,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])
    
    let aSharpMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2,1,3,2,1,4,3,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","F\(Constants.DOUBLE_SHARP_UNICODE)","G\(Constants.DOUBLE_SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])
    
    let aSharpMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "a\(Constants.SHARP_UNICODE) Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleFingeringLH: [2,3,4,1,2,3,1,2,3,4,1,2,3,1,2], scaleLetters: ["A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)","G\(Constants.SHARP_UNICODE)","F\(Constants.SHARP_UNICODE)","E\(Constants.SHARP_UNICODE)","D\(Constants.SHARP_UNICODE)","C\(Constants.SHARP_UNICODE)","B\(Constants.SHARP_UNICODE)","A\(Constants.SHARP_UNICODE)"])

    let bbMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Harmonic (related to D\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2,1,3,2,1,4,3,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.FLAT_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)"])
    
    let bbMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Melodic Ascending", scaleFingeringRH: [4,1,2,3,1,2,3,4,1,2,3,1,2,3,4], scaleFingeringLH: [2,1,3,2,1,4,3,2,1,3,2,1,4,3,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.FLAT_UNICODE)","F","G\(Constants.NATURAL_UNICODE)","A\(Constants.NATURAL_UNICODE)","B\(Constants.FLAT_UNICODE)"])
    
    let bbMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "b\(Constants.FLAT_UNICODE) Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,3,2,1,4,3,2,1,3,2,1,4], scaleFingeringLH: [2,3,4,1,2,3,1,2,3,4,1,2,3,1,2], scaleLetters: ["B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G\(Constants.FLAT_UNICODE)","F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)"])
  
    let fMinorScaleHarmonic: ScaleModel = ScaleModel(scaleName: "f Minor Harmonic (related to A\(Constants.FLAT_UNICODE) Maj)", scaleFingeringRH: [1,2,3,4,1,2,3,1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.NATURAL_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.FLAT_UNICODE)","E\(Constants.NATURAL_UNICODE)","F"])
    
    let fMinorScaleMelodicAscending: ScaleModel = ScaleModel(scaleName: "f Minor Melodic Ascending", scaleFingeringRH: [1,2,3,4,1,2,3,1,2,3,4,1,2,3,4], scaleFingeringLH: [5,4,3,2,1,3,2,1,4,3,2,1,3,2,1], scaleLetters: ["F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.NATURAL_UNICODE)","E\(Constants.NATURAL_UNICODE)","F","G","A\(Constants.FLAT_UNICODE)","B\(Constants.FLAT_UNICODE)","C","D\(Constants.NATURAL_UNICODE)","E\(Constants.NATURAL_UNICODE)","F"])

    let fMinorScaleMelodicDescending: ScaleModel = ScaleModel(scaleName: "f Minor Melodic Descending", scaleFingeringRH: [4,3,2,1,4,3,2,1,3,2,1,4,3,2,1], scaleFingeringLH: [1,2,3,1,2,3,4,1,2,3,1,2,3,4,5], scaleLetters: ["F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F","E\(Constants.FLAT_UNICODE)","D\(Constants.FLAT_UNICODE)","C","B\(Constants.FLAT_UNICODE)","A\(Constants.FLAT_UNICODE)","G","F"])
    
    
//    createArray is a func to gather all the data from all the scales into a single array of scales for the ScalesViewControllers to display
    func createArray() -> [ScaleModel] {
        
        let theArray: [ScaleModel] = [cMinorScaleHarmonic, cMinorScaleMelodicAscending, cMinorScaleMelodicDescending, gMinorScaleHarmonic, gMinorScaleMelodicAscending, gMinorScaleMelodicDescending, dMinorScaleHarmonic, dMinorScaleMelodicAscending, dMinorScaleMelodicDescending, aMinorScaleHarmonic, aMinorScaleMelodicAscending, aMinorScaleMelodicDescending, eMinorScaleHarmonic, eMinorScaleMelodicAscending, eMinorScaleMelodicDescending, bMinorScaleHarmonic,bMinorScaleMelodicAscending, bMinorScaleMelodicDescending, fSharpMinorScaleHarmonic, fSharpMinorScaleMelodicAscending, fSharpMinorScaleMelodicDescending, cSharpMinorScaleHarmonic, cSharpMinorScaleMelodicAscending, cSharpMinorScaleMelodicDescending, gSharpMinorScaleHarmonic, gSharpMinorScaleMelodicAscending, gSharpMinorScaleMelodicDescending, abMinorScaleHarmonic, abMinorScaleMelodicAscending, abMinorScaleMelodicDescending, dSharpMinorScaleHarmonic, dSharpMinorScaleMelodicAscending, dSharpMinorScaleMelodicDescending, ebMinorScaleHarmonic, ebMinorScaleMelodicAscending, ebMinorScaleMelodicDescending, aSharpMinorScaleHarmonic, aSharpMinorScaleMelodicAscending, aSharpMinorScaleMelodicDescending, bbMinorScaleHarmonic, bbMinorScaleMelodicAscending, bbMinorScaleMelodicDescending, fMinorScaleHarmonic, fMinorScaleMelodicAscending, fMinorScaleMelodicDescending]
        
  return theArray
    }
}
